#!/bin/bash

# Script para testar todos os endpoints de Doa√ß√µes
# Executar: chmod +x test_doacoes_endpoints.sh && ./test_doacoes_endpoints.sh

BASE_URL="http://localhost:3003/api/doacoes"
DOADORES_URL="http://localhost:3003/api/doadores"

echo "üéØ TESTANDO ENDPOINTS DE DOA√á√ïES"
echo "================================"
echo ""

# 1. LISTAR TODAS AS DOA√á√ïES
echo "1Ô∏è‚É£  GET - Listar todas as doa√ß√µes"
echo "curl -X GET $BASE_URL"
curl -X GET $BASE_URL | jq '.' 2>/dev/null || curl -X GET $BASE_URL
echo -e "\n\n"

# 2. CRIAR DOA√á√ÉO COM DOADOR EXISTENTE
echo "2Ô∏è‚É£  POST - Criar doa√ß√£o com doador existente (doadorId = 1)"
echo "curl -X POST $BASE_URL -H 'Content-Type: application/json' -d '{...}'"
curl -X POST $BASE_URL \
  -H "Content-Type: application/json" \
  -d '{
    "doadorId": 1,
    "valor": 250.75,
    "dataDoacao": "2025-06-05",
    "observacoes": "Doa√ß√£o teste via API"
  }' | jq '.' 2>/dev/null || curl -X POST $BASE_URL \
  -H "Content-Type: application/json" \
  -d '{
    "doadorId": 1,
    "valor": 250.75,
    "dataDoacao": "2025-06-05",
    "observacoes": "Doa√ß√£o teste via API"
  }'
echo -e "\n\n"

# 3. CRIAR DOA√á√ÉO COM NOVO DOADOR (dadosDoador)
echo "3Ô∏è‚É£  POST - Criar doa√ß√£o com novo doador"
echo "curl -X POST $BASE_URL -H 'Content-Type: application/json' -d '{...}'"
curl -X POST $BASE_URL \
  -H "Content-Type: application/json" \
  -d '{
    "dadosDoador": {
      "tipoDoador": "PF",
      "nomeDoador": "Maria Fernanda Costa",
      "documento": "98765432100",
      "email": "maria.costa@email.com",
      "telefone": "11987654321"
    },
    "valor": 150.00,
    "dataDoacao": "2025-06-05",
    "observacoes": "Primeira doa√ß√£o da Maria"
  }' | jq '.' 2>/dev/null || curl -X POST $BASE_URL \
  -H "Content-Type: application/json" \
  -d '{
    "dadosDoador": {
      "tipoDoador": "PF",
      "nomeDoador": "Maria Fernanda Costa",
      "documento": "98765432100",
      "email": "maria.costa@email.com",
      "telefone": "11987654321"
    },
    "valor": 150.00,
    "dataDoacao": "2025-06-05",
    "observacoes": "Primeira doa√ß√£o da Maria"
  }'
echo -e "\n\n"

# 4. BUSCAR DOA√á√ÉO POR ID
echo "4Ô∏è‚É£  GET - Buscar doa√ß√£o por ID (ID = 1)"
echo "curl -X GET $BASE_URL/1"
curl -X GET $BASE_URL/1 | jq '.' 2>/dev/null || curl -X GET $BASE_URL/1
echo -e "\n\n"

# 5. BUSCAR DOA√á√ïES POR DOADOR
echo "5Ô∏è‚É£  GET - Buscar doa√ß√µes por doador (doadorId = 1)"
echo "curl -X GET $BASE_URL/doador/1"
curl -X GET $BASE_URL/doador/1 | jq '.' 2>/dev/null || curl -X GET $BASE_URL/doador/1
echo -e "\n\n"

# 6. FILTRAR DOA√á√ïES POR PER√çODO
echo "6Ô∏è‚É£  GET - Filtrar doa√ß√µes por per√≠odo"
echo "curl -X GET '$BASE_URL?dataInicio=2025-01-01&dataFim=2025-12-31'"
curl -X GET "$BASE_URL?dataInicio=2025-01-01&dataFim=2025-12-31" | jq '.' 2>/dev/null || curl -X GET "$BASE_URL?dataInicio=2025-01-01&dataFim=2025-12-31"
echo -e "\n\n"

# 7. FILTRAR DOA√á√ïES POR TIPO DE DOADOR
echo "7Ô∏è‚É£  GET - Filtrar doa√ß√µes por tipo de doador (PF)"
echo "curl -X GET '$BASE_URL?tipoDoador=PF'"
curl -X GET "$BASE_URL?tipoDoador=PF" | jq '.' 2>/dev/null || curl -X GET "$BASE_URL?tipoDoador=PF"
echo -e "\n\n"

# 8. ATUALIZAR DOA√á√ÉO
echo "8Ô∏è‚É£  PUT - Atualizar doa√ß√£o (ID = 1)"
echo "curl -X PUT $BASE_URL/1 -H 'Content-Type: application/json' -d '{...}'"
curl -X PUT $BASE_URL/1 \
  -H "Content-Type: application/json" \
  -d '{
    "doadorId": 1,
    "valor": 300.00,
    "dataDoacao": "2025-06-05",
    "observacoes": "Doa√ß√£o ATUALIZADA via API"
  }' | jq '.' 2>/dev/null || curl -X PUT $BASE_URL/1 \
  -H "Content-Type: application/json" \
  -d '{
    "doadorId": 1,
    "valor": 300.00,
    "dataDoacao": "2025-06-05",
    "observacoes": "Doa√ß√£o ATUALIZADA via API"
  }'
echo -e "\n\n"

# 9. OBTER ESTAT√çSTICAS
echo "9Ô∏è‚É£  GET - Obter estat√≠sticas de doa√ß√µes"
echo "curl -X GET $BASE_URL/estatisticas"
curl -X GET $BASE_URL/estatisticas | jq '.' 2>/dev/null || curl -X GET $BASE_URL/estatisticas
echo -e "\n\n"

# 10. TENTAR CRIAR DOA√á√ÉO SEM DOADOR
echo "üîü POST - Tentar criar doa√ß√£o sem doador"
echo "curl -X POST $BASE_URL -H 'Content-Type: application/json' -d '{...}'"
curl -X POST $BASE_URL \
  -H "Content-Type: application/json" \
  -d '{
    "valor": 100.00,
    "dataDoacao": "2025-06-05",
    "observacoes": "Doa√ß√£o sem doador"
  }' | jq '.' 2>/dev/null || curl -X POST $BASE_URL \
  -H "Content-Type: application/json" \
  -d '{
    "valor": 100.00,
    "dataDoacao": "2025-06-05",
    "observacoes": "Doa√ß√£o sem doador"
  }'
echo -e "\n\n"

# 11. TENTAR CRIAR DOA√á√ÉO COM DADOS INV√ÅLIDOS
echo "1Ô∏è‚É£1Ô∏è‚É£ POST - Tentar criar doa√ß√£o com dados inv√°lidos"
echo "curl -X POST $BASE_URL -H 'Content-Type: application/json' -d '{...}'"
curl -X POST $BASE_URL \
  -H "Content-Type: application/json" \
  -d '{
    "doadorId": 1,
    "valor": -50,
    "dataDoacao": "2026-01-01",
    "observacoes": "Doa√ß√£o inv√°lida"
  }' | jq '.' 2>/dev/null || curl -X POST $BASE_URL \
  -H "Content-Type: application/json" \
  -d '{
    "doadorId": 1,
    "valor": -50,
    "dataDoacao": "2026-01-01",
    "observacoes": "Doa√ß√£o inv√°lida"
  }'
echo -e "\n\n"

# 12. EXCLUIR DOA√á√ÉO
echo "1Ô∏è‚É£2Ô∏è‚É£ DELETE - Excluir doa√ß√£o (ID = 2)"
echo "curl -X DELETE $BASE_URL/2"
curl -X DELETE $BASE_URL/2 | jq '.' 2>/dev/null || curl -X DELETE $BASE_URL/2
echo -e "\n\n"

# 13. TENTAR EXCLUIR DOA√á√ÉO INEXISTENTE
echo "1Ô∏è‚É£3Ô∏è‚É£ DELETE - Tentar excluir doa√ß√£o inexistente (ID = 9999)"
echo "curl -X DELETE $BASE_URL/9999"
curl -X DELETE $BASE_URL/9999 | jq '.' 2>/dev/null || curl -X DELETE $BASE_URL/9999
echo -e "\n\n"

echo "‚úÖ TODOS OS TESTES DE DOA√á√ïES CONCLU√çDOS!"
echo "========================================"